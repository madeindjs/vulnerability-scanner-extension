// @ts-check

const {getLocalStorage} = require("./storage");

/** @type {HTMLInputElement} */
// @ts-ignore
const activate = document.getElementById("activate");

const countElements = {
  tries: document.getElementById("tries"),
  skips: document.getElementById("skips"),
  maybe: document.getElementById("maybe"),
  works: document.getElementById("works"),
  notWorks: document.getElementById("notWorks"),
};

async function onLoad() {
  const {counts, active} = await getLocalStorage(["counts", "active"]);

  if (counts !== undefined) {
    Object.keys(countElements)
      .filter((key) => counts[key] !== undefined)
      .forEach((key) => (countElements[key].innerText = counts[key]));
  }

  if (activate !== undefined) {
    activate.checked = active;
  }
}

activate.addEventListener("click", async () => {
  await chrome.storage.local.set({active: activate.checked});
});

chrome.storage.onChanged.addListener(({counts}) => {
  if (counts !== undefined) {
    Object.keys(countElements)
      .filter((key) => counts[key]?.newValue !== undefined)
      .forEach((key) => (countElements[key].innerText = counts[key]));
  }
});

onLoad().catch(console.error);
