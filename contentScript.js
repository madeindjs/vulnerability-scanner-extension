function log(...args) {
  const message = args.shift();
  console.log(`[contentScript] ${message}`, ...args);
}

log("loaded");

// document.querySelectorAll("form").forEach((form) => {
//   console.log(form);
//   form.querySelectorAll('input[type="text"]').forEach((input) => {
//     // input.value = "a";
//     console.log(input);
//   });
//   form.addEventListener("submit", (event) => {
//     console.log(event);
//     // event.preventDefault();
//   });
// });

chrome.runtime.sendMessage({message: "hello"}, function (response) {
  log(response);
});

// Listening to messages in Context Script
chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  log(request);
  // Callback
  sendResponse({message: "Content script has received that message âš¡"});
});

// function addXMLRequestCallback(callback) {
//   var oldSend, i;
//   if (XMLHttpRequest.callbacks) {
//     // we've already overridden send() so just add the callback
//     XMLHttpRequest.callbacks.push(callback);
//   } else {
//     // create a callback queue
//     XMLHttpRequest.callbacks = [callback];
//     // store the native send()
//     oldSend = XMLHttpRequest.prototype.send;
//     // override the native send()
//     XMLHttpRequest.prototype.send = function () {
//       // call the native send()
//       oldSend.apply(this, arguments);

//       this.onreadystatechange = function (progress) {
//         for (i = 0; i < XMLHttpRequest.callbacks.length; i++) {
//           XMLHttpRequest.callbacks[i](progress);
//         }
//       };
//     };
//   }
// }

// addXMLRequestCallback(console.log);

// (function () {
//   var origOpen = XMLHttpRequest.prototype.open;
//   XMLHttpRequest.prototype.open = function () {
//     console.log("request started!");
//     this.addEventListener("load", function () {
//       console.log("request completed!");
//       console.log(this.readyState); //will always be 4 (ajax is completed successfully)
//       console.log(this.responseText); //whatever the response was
//     });
//     origOpen.apply(this, arguments);
//   };
// })();

var s_ajaxListener = new Object();
s_ajaxListener.tempOpen = XMLHttpRequest.prototype.open;
s_ajaxListener.tempSend = XMLHttpRequest.prototype.send;
s_ajaxListener.callback = function () {
  // this.method :the ajax method used
  // this.url    :the url of the requested script (including query string, if any) (urlencoded)
  // this.data   :the data sent, if any ex: foo=bar&a=b (urlencoded)
};

XMLHttpRequest.prototype.open = function (a, b) {
  if (!a) var a = "";
  if (!b) var b = "";
  s_ajaxListener.tempOpen.apply(this, arguments);
  s_ajaxListener.method = a;
  s_ajaxListener.url = b;
  if (a.toLowerCase() == "get") {
    s_ajaxListener.data = b.split("?");
    s_ajaxListener.data = s_ajaxListener.data[1];
  }
};

XMLHttpRequest.prototype.send = function (a, b) {
  if (!a) var a = "";
  if (!b) var b = "";
  s_ajaxListener.tempSend.apply(this, arguments);
  if (s_ajaxListener.method.toLowerCase() == "post") s_ajaxListener.data = a;
  s_ajaxListener.callback();
};
